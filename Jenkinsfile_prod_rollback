def remote = [:]
remote.name = "stage"
remote.host = "192.168.245.128"
remote.allowAnyHosts = true
withCredentials([usernamePassword(credentialsId: 'fe95e991-94b8-4103-a575-7c6c6bf277f9', passwordVariable: 'password', usernameVariable: 'userName')]) {
        remote.user = userName
        remote.password = password
}
pipeline {
  agent {label 'Slave1'}
  stages {
          
        stage('Deploy Rollback Data Center 1') {
            steps {
                sshCommand remote: remote, command: 'rm -rf /var/www/html/jenkins/*'
                sshCommand remote: remote, command: 'cp -a  /home/stage/backup/. /var/www/html/jenkins/'
                sshCommand remote: remote, command: 'cd /var/www/html/jenkins'
                sshCommand remote: remote, command: 'ls -lrt'
            }
        }
        
        stage('Approve to Proceed Data Center 2') {
            input {
                message "Can we Proceed?"
                ok "Yes"
            }
            steps {
                echo "job is proceeding..."
            }
        }
        
        stage('Deploy Rollback Data Center 2') {
            steps {
                sshCommand remote: remote, command: 'rm -rf /var/www/html/jenkins/*'
                sshCommand remote: remote, command: 'cp -a  /home/stage/backup/. /var/www/html/jenkins/'
                sshCommand remote: remote, command: 'cd /var/www/html/jenkins'
                sshCommand remote: remote, command: 'ls -lrt'
            }
        }
          
    stage('Test') {
      parallel {
        stage('Maven') {
          steps {
            bat(script: 'mvn compile', label: 'maven')
          }
        }

        stage('Cucumber Report') {
          steps {
            cucumber '**/*.json'
          }
        }

      }
    }     

  }
        post('Send Mail') {
        always {
            emailext body: 'Stage Rollback Complete', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Stage Rollback'
        }
    }
}
